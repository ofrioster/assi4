import java.util.ArrayList;


public class Client implements ClientInterfce{
	
	private String userName;
	private ArrayList<Client> followers;
	private String hostIP;
	private String hostPort;
	private String password;
	
	
	public Client(String userName,String hostIP, String hostPort,String password){
		this.userName=userName;
		this.followers= new ArrayList<Client>();
		this.hostIP=hostIP;
		this.hostPort=hostPort;
		this.password=password;
		
	}


	/** (non-Javadoc)
	 * @return ClientUserName
	 */
	public String getClientUserName() {
		return this.userName;
	}


	/** (non-Javadoc)
	 * @return ClientPassword()
	 */
	public String getClientPassword() {
		return this.password;
	}



	/** (non-Javadoc)
	 * @param Client newfollower
	 */
	public void addFollower(Client newfollower) {
		this.followers.add(newfollower);
		
	}



	/** (non-Javadoc)
	 * @param follower To Remove
	 */
	public void removeFollower(Client followerToRemove) {
		Boolean found=false;
		for (int i=0; i<this.followers.size() && !found;i++){
			if (this.followers.get(i).equals(followerToRemove)){
				this.followers.remove(i);
				found=true;
			}
		}
		
	}


	
	/** (non-Javadoc)
	 * @param newHostIP
	 */
	public void setHostIP(String newHostIP) {
		this.hostIP=newHostIP;
		
	}


	/** (non-Javadoc)
	 * @param newHostPort
	 */
	public void setHostPort(String newHostPort) {
		this.hostPort=hostPort;
		
	}



	/** (non-Javadoc)
	 * @param new Password
	 */
	public void setPassword(String newPassword) {
		this.password=password;
		
	}


	/** (non-Javadoc)
	 * @see ClientInterfce#confirmPassword(java.lang.String)
	 */
	public Boolean confirmPassword(String Password) {
		Boolean res= this.password.equals(Password);
		return res;
	}
	

}
